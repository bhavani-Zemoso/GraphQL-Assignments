{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nconst GET_CHARACTER = gql`\n    query GetCharacter($id: ID!) {\n        character(id:$id)\n        {\n            id\n            name\n            image\n            episode {\n            name\n            episode\n            }\n        }\n    }\n`;\nexport const useCharacter = id => {\n  _s();\n\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(GET_CHARACTER, {\n    variables: {\n      id\n    }\n  });\n  return {\n    data,\n    error,\n    loading\n  };\n};\n\n_s(useCharacter, \"Z+0LgrSWpTZsLds+tjQq9+67f1U=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["gql","useQuery","GET_CHARACTER","useCharacter","id","data","error","loading","variables"],"sources":["/home/bhavS/GraphQL/react-graphql/src/hooks/useCharacter.js"],"sourcesContent":["import { gql, useQuery } from '@apollo/client';\n\nconst GET_CHARACTER = gql `\n    query GetCharacter($id: ID!) {\n        character(id:$id)\n        {\n            id\n            name\n            image\n            episode {\n            name\n            episode\n            }\n        }\n    }\n`;\n\nexport const useCharacter = (id) => {\n    const {data, error, loading} = useQuery(GET_CHARACTER, {\n        variables: {\n            id\n        }\n    });\n\n    return {\n        data,\n        error,\n        loading,\n    };\n};"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,MAAMC,aAAa,GAAGF,GAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,OAAO,MAAMG,YAAY,GAAIC,EAAD,IAAQ;EAAA;;EAChC,MAAM;IAACC,IAAD;IAAOC,KAAP;IAAcC;EAAd,IAAyBN,QAAQ,CAACC,aAAD,EAAgB;IACnDM,SAAS,EAAE;MACPJ;IADO;EADwC,CAAhB,CAAvC;EAMA,OAAO;IACHC,IADG;IAEHC,KAFG;IAGHC;EAHG,CAAP;AAKH,CAZM;;GAAMJ,Y;UACsBF,Q"},"metadata":{},"sourceType":"module"}