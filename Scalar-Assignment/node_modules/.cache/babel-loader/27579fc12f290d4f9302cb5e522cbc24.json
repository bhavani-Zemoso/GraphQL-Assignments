{"ast":null,"code":"var _jsxFileName = \"/home/bhavS/GraphQL/react-graphql/src/pages/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport { gql, useLazyQuery } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_CHARACTER_LOCATIONS = gql`\n    query getCharacterLocations {\n        characters(filter: {\n            name: \"Morty Smith\"\n        }) {\n            results {\n                location {\n                    name\n                }\n            }\n        }\n    }\n`;\nexport const Search = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [getLocations, {\n    loading,\n    error,\n    data,\n    called\n  }] = useLazyQuery(GET_CHARACTER_LOCATIONS, {\n    variables: {\n      name\n    }\n  });\n  console.log({\n    data,\n    error,\n    loading,\n    called\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getLocations(),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), loading]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"D9y+t9XNjCmPUBMJQa5Su/0krzU=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["gql","useLazyQuery","React","useState","GET_CHARACTER_LOCATIONS","Search","name","setName","getLocations","loading","error","data","called","variables","console","log","e","target","value"],"sources":["/home/bhavS/GraphQL/react-graphql/src/pages/Search.jsx"],"sourcesContent":["import { gql, useLazyQuery } from '@apollo/client'\nimport React, { useState } from 'react'\n\nconst GET_CHARACTER_LOCATIONS = gql `\n    query getCharacterLocations {\n        characters(filter: {\n            name: \"Morty Smith\"\n        }) {\n            results {\n                location {\n                    name\n                }\n            }\n        }\n    }\n`\n\nexport const Search = () => {\n\n    const [name, setName] = useState(\"\")\n\n    const [getLocations, {loading, error, data, called}] = useLazyQuery(GET_CHARACTER_LOCATIONS, {\n        variables: {\n            name\n        }\n    })\n\n    console.log({\n        data,\n        error,\n        loading,\n        called\n    })\n\n  return (\n    <div>\n        <input value={name} onChange={(e) => setName(e.target.value)} />\n        <button onClick={() => getLocations()}>Search</button>\n        {loading }\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,uBAAuB,GAAGJ,GAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,OAAO,MAAMK,MAAM,GAAG,MAAM;EAAA;;EAExB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAM,CAACK,YAAD,EAAe;IAACC,OAAD;IAAUC,KAAV;IAAiBC,IAAjB;IAAuBC;EAAvB,CAAf,IAAiDX,YAAY,CAACG,uBAAD,EAA0B;IACzFS,SAAS,EAAE;MACPP;IADO;EAD8E,CAA1B,CAAnE;EAMAQ,OAAO,CAACC,GAAR,CAAY;IACRJ,IADQ;IAERD,KAFQ;IAGRD,OAHQ;IAIRG;EAJQ,CAAZ;EAOF,oBACE;IAAA,wBACI;MAAO,KAAK,EAAEN,IAAd;MAAoB,QAAQ,EAAGU,CAAD,IAAOT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;IAA5C;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAE,MAAMV,YAAY,EAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKC,OAHL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAxBM;;GAAMJ,M;UAI8CJ,Y;;;KAJ9CI,M"},"metadata":{},"sourceType":"module"}